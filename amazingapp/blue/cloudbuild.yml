steps:
  # Build the Docker image and tag it with commit SHA and latest
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/amazingapp:$COMMIT_SHA', '-t', 'gcr.io/$PROJECT_ID/amazingapp:latest', '.']

  # Push the image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/amazingapp:$COMMIT_SHA']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/amazingapp:latest']

  # Deploy the image to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'amazingapp'
      - '--image'
      - 'gcr.io/$PROJECT_ID/amazingapp:$COMMIT_SHA'
      - '--region'
      - 'us-east1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'

images:
  - 'gcr.io/$PROJECT_ID/amazingapp:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/amazingapp:latest'

logsBucket: "gs://cherry-1"
steps:
  # Build the Docker image and tag it with commit SHA and latest
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/amazingapp:$COMMIT_SHA', '-t', 'gcr.io/$PROJECT_ID/amazingapp:latest', '.']

  # Push the image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/amazingapp:$COMMIT_SHA']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/amazingapp:latest']

  # Deploy the image to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'amazingapp'
      - '--image'
      - 'gcr.io/$PROJECT_ID/amazingapp:$COMMIT_SHA'
      - '--region'
      - 'us-east1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'

images:
  - 'gcr.io/$PROJECT_ID/amazingapp:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/amazingapp:latest'

logsBucket: "gs://cherry-naveen"
